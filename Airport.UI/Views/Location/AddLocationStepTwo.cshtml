@{
    Layout = "_PanelLayout";
}
@model List<MyCars>

<style>
    #map {
        height: 500px;
    }
</style>


<div class="row">
    <div class="col-md-12">
        <form id="mapLocationForm" asp-route="getMapLocation" method="post">
            <div id="map" class="mb-3"></div>
            <input id="mapValues" type="hidden" name="mapValues" />
            <button class="btn btn-secondary" style="float:right;" id="nextBtn" type="button">Next</button>
        </form>
    </div>
</div>



@*<button id="btn">listele</button>*@

<div class="modal fade" id="getCircle" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Location Marker</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="locationMarker">
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="locationName">Location Name</label>
                            <input class="form-control" id="locationName" placeholder="Enter a location name" type="text" />
                        </div>

                        <div class="col-md-6 mb-3">
                            <label for="locationRadius">Radius</label>
                            <input class="form-control" id="locationRadius" type="number" />
                        </div>
                        <div class="col-md-12">
                            <label>Car on this point</label>
                            <select class="form-control select2-multiple" id="carSelect" multiple="multiple" data-width="100%">
                                @foreach (var car in Model)
                                {
                                    <option value="@car.Id">@(car.Brand?.CarBrandName)</option>
                                }
                            </select>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary"
                        data-dismiss="modal">
                    Close
                </button>
                <button type="button" class="btn btn-primary" id="saveLocation">Save changes</button>
            </div>
        </div>
    </div>
</div>


@section pageJs{

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAnqSEVlrvgHJymL-F8GmxIwNbe8fYUjdg&libraries=places&callback=initMap"></script>
    <script>

        let map, circle, placesService;
        let infoWindow = new google.maps.InfoWindow();

        function initMap() {
            // Harita oluştur
            map = new google.maps.Map(document.getElementById("map"), {
                center: @ViewBag.Location,
                zoom: 13,
                mapTypeControl: false,
                streetViewControl: false,
            });

            // Haritaya tıklanınca daire ekle
            map.addListener("click", function (event) {
                firstEvent = event;
                checkPost = "ADD";
                $('#locationMarker #locationName').val("")
                $('#locationMarker #locationRadius').val("")
                $('#carSelect').val("")
                $('#carSelect').trigger("change")

                $('#getCircle').modal()
            });
            // Butona tıklanınca daire içindeki yerleri listele
            // document.getElementById("btn").addEventListener("click", listPlaces);
        }
        var mapEvent;
        var firstEvent;
        var checkPost;

        // Daire ekleme işlemi
        function addCircle(event, km) {
            // Daha önce oluşturulmuş daire varsa sil
            if (circle) {
                circle.setMap(null);
            }

            // Yeni daire oluştur
            circle = new google.maps.Circle({
                center: event.latLng,
                radius: km * 100,
                map: map,
                //draggable: true,
                //editable: true,
            });
            console.log(circle)
            // Daire üzerine tıklandığında bilgileri göster
            circle.addListener("click", showInfo);

            // Daire boyutu veya konumu değiştirildiğinde bilgileri güncelle
            circle.addListener("radius_changed", showInfo);
            circle.addListener("center_changed", showInfo);
        }



        // Daire hakkındaki bilgileri gösterme işlemi
        function showInfo() {
            $('#locationMarker #locationName').val(locationJson.locationName)
            $('#locationMarker #locationRadius').val(locationJson.locationRadius)
            $('#locationMarker #carSelect').val(locationJson.locationCars)
            $('#locationMarker #carSelect').trigger("change")
            checkPost = "UPDATE";
            $('#getCircle').modal()

            //const radius = circle.getRadius() / 1000;
            //const center = circle.getCenter().toJSON();
            //infoWindow.setContent(`<div>Merkez: ${JSON.stringify(center)}, Yarıçap: ${radius.toFixed(2)} km</div>`);
            //infoWindow.setPosition(circle.getCenter());
            //infoWindow.open(map);
        }

        // Daire içindeki yerleri listeleme işlemi
        function listPlaces() {
            // PlacesService oluştur
            placesService = new google.maps.places.PlacesService(map);

            const request = {
                location: circle.getCenter(),
                radius: circle.getRadius(),
            };

            placesService.nearbySearch(request, (results, status) => {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    console.log(JSON.stringify(results));
                }
            });
        }

        window.onload = () => {
            initMap();
        }

        var locationJson = {
            locationName: "",
            locationRadius: 0,
            locationCars: ""
        };

        $('#saveLocation').on("click", function () {
            locationJson.locationName = $('#locationName').val();
            locationJson.locationRadius = parseInt($('#locationRadius').val());
            locationJson.locationCars = $('#carSelect').val();

            if (checkPost == "ADD"){
                mapEvent = firstEvent;
            }


            addCircle(mapEvent, locationJson.locationRadius);

            $('#getCircle').modal("hide")
        })


        $('#nextBtn').on("click", function () {
            $('#mapValues').val(JSON.stringify(locationJson))
            $('#mapLocationForm').submit()
        })
    </script>
}