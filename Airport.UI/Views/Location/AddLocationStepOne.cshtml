@{
    Layout = "_PanelLayout";
}

<div class="row">
    <div class="col-12 mb-4">
        <form asp-route="AddLocationStepOne" novalidate>
            <input type="text" class="form-control" placeholder="Search Location" id="searchLocation" />
            <input type="hidden" id="placeId" name="placeId" />

            <button class="btn btn-secondary next-btn" type="submit">Next</button>
        </form>
    </div>
</div>






@section pageJs{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAnqSEVlrvgHJymL-F8GmxIwNbe8fYUjdg&libraries=places&callback=initMap"></script>

    <script>
        let map, circle, placesService;
        let infoWindow = new google.maps.InfoWindow();

        function initMap() {
            // Harita oluştur
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 41.0812087, lng: 28.9730151 },
                zoom: 13,
            });

            // Haritaya tıklanınca daire ekle
            map.addListener("click", addCircle);

            // Butona tıklanınca daire içindeki yerleri listele
            document.getElementById("btn").addEventListener("click", listPlaces);
        }

        // Daire ekleme işlemi
        function addCircle(event) {
            // Daha önce oluşturulmuş daire varsa sil
            if (circle) {
                circle.setMap(null);
            }

            // Yeni daire oluştur
            circle = new google.maps.Circle({
                center: event.latLng,
                radius: 500,
                map: map,
                draggable: true,
                editable: true,
            });

            // Daire üzerine tıklandığında bilgileri göster
            circle.addListener("click", showInfo);

            // Daire boyutu veya konumu değiştirildiğinde bilgileri güncelle
            circle.addListener("radius_changed", showInfo);
            circle.addListener("center_changed", showInfo);
        }

        // Daire hakkındaki bilgileri gösterme işlemi
        function showInfo() {
            const radius = circle.getRadius() / 1000;
            const center = circle.getCenter().toJSON();
            infoWindow.setContent(`<div>Merkez: ${JSON.stringify(center)}, Yarıçap: ${radius.toFixed(2)} km</div>`);
            infoWindow.setPosition(circle.getCenter());
            infoWindow.open(map);
        }

        // Daire içindeki yerleri listeleme işlemi
        function listPlaces() {


            // PlacesService oluştur
            placesService = new google.maps.places.PlacesService(map);

            const request = {
                location: circle.getCenter(),
                radius: circle.getRadius(),
            };

            placesService.nearbySearch(request, (results, status) => {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    console.log(JSON.parse(JSON.stringify(results)));
                }
            });
        }

        var pickPlaceId;
        var dropPlaceId;

        google.maps.event.addDomListener(window, 'load', initialize);

        function initialize() {
            var input = document.getElementById("searchLocation");

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.addListener('place_changed', function () {
                var place = autocomplete.getPlace();
                pickPlaceId = place.place_id
                $('#placeId').val(pickPlaceId)
                //$('#_Pick_Up_Value').val(pickPlaceId)
            });

        }

    </script>
}
