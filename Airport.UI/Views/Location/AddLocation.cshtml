@{
    Layout = "_PanelLayout";
}


<div class="col-12 mb-4">
    <h5 class="mb-4">Validation</h5>
    <div class="card mb-4">
        <div id="smartWizardValidation">
            <ul class="card-header">
                <li><a href="#step-0">Step 1<br /><small>First step description</small></a></li>
                <li><a href="#step-1">Step 2<br /><small>Second step description</small></a></li>
                <li><a href="#step-2">Step 3<br /><small>Third step description</small></a></li>
            </ul>

            <div class="card-body">
                <div id="step-0">
                    <form id="form-step-0" class="tooltip-label-right" novalidate>
                        <input type="text" class="form-control" placeholder="Search Location" id="searchLocation" />
                    </form>
                </div>
                <div id="step-1">
                    <form id="form-step-1" class="tooltip-label-right" novalidate>
                        <div class="form-group position-relative error-l-75">
                            <label for="name">First Name</label>
                            <input type="text" class="form-control" name="nameValidation"
                                   id="nameValidation" placeholder="Your first name" required>
                        </div>
                        <div class="form-group position-relative error-l-75">
                            <label for="lastName">Last Name</label>
                            <input type="text" class="form-control" name="lastNameValidation"
                                   id="lastNameValidation" placeholder="Your last name" required>
                        </div>
                    </form>
                </div>
                <div id="step-2">
                    <h4 class="text-center">Thank you for your feedback!</h4>
                    <p class="muted text-center p-4">
                        Podcasting operational change management inside of workflows to establish a
                        framework. Taking seamless key performance indicators offline to maximise the
                        long tail. Keeping your eye on the ball while performing a deep dive on the
                        start-up mentality.
                    </p>
                </div>
            </div>

            <div class="btn-toolbar custom-toolbar text-center card-body pt-0">
                <button class="btn btn-secondary prev-btn" type="button">Previous</button>
                <button class="btn btn-secondary next-btn" type="button">Next</button>
                <button class="btn btn-secondary finish-btn" type="submit">Finish</button>
            </div>
        </div>
    </div>
</div>






@section pageJs{
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAnqSEVlrvgHJymL-F8GmxIwNbe8fYUjdg&libraries=places&callback=initMap"></script>

    <script>
        let map, circle, placesService;
        let infoWindow = new google.maps.InfoWindow();

        function initMap() {
            // Harita oluştur
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 41.0812087, lng: 28.9730151 },
                zoom: 13,
            });

            // Haritaya tıklanınca daire ekle
            map.addListener("click", addCircle);

            // Butona tıklanınca daire içindeki yerleri listele
            document.getElementById("btn").addEventListener("click", listPlaces);
        }

        // Daire ekleme işlemi
        function addCircle(event) {
            // Daha önce oluşturulmuş daire varsa sil
            if (circle) {
                circle.setMap(null);
            }

            // Yeni daire oluştur
            circle = new google.maps.Circle({
                center: event.latLng,
                radius: 500,
                map: map,
                draggable: true,
                editable: true,
            });

            // Daire üzerine tıklandığında bilgileri göster
            circle.addListener("click", showInfo);

            // Daire boyutu veya konumu değiştirildiğinde bilgileri güncelle
            circle.addListener("radius_changed", showInfo);
            circle.addListener("center_changed", showInfo);
        }

        // Daire hakkındaki bilgileri gösterme işlemi
        function showInfo() {
            const radius = circle.getRadius() / 1000;
            const center = circle.getCenter().toJSON();
            infoWindow.setContent(`<div>Merkez: ${JSON.stringify(center)}, Yarıçap: ${radius.toFixed(2)} km</div>`);
            infoWindow.setPosition(circle.getCenter());
            infoWindow.open(map);
        }

        // Daire içindeki yerleri listeleme işlemi
        function listPlaces() {


            // PlacesService oluştur
            placesService = new google.maps.places.PlacesService(map);

            const request = {
                location: circle.getCenter(),
                radius: circle.getRadius(),
            };

            placesService.nearbySearch(request, (results, status) => {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    console.log(JSON.parse(JSON.stringify(results)));
                }
            });
        }

        var pickPlaceId;
        var dropPlaceId;

        google.maps.event.addDomListener(window, 'load', initialize);

        function initialize() {
            var input = document.getElementById("searchLocation");

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.addListener('place_changed', function () {
                var place = autocomplete.getPlace();
                pickPlaceId = place.place_id
                console.log(pickPlaceId)
                //$('#_Pick_Up_Value').val(pickPlaceId)
            });

        }

    </script>
}
