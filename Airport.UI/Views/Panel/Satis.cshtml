@{
    Layout = "_PanelLayout";
    ViewData["title"] = "Satış Acentası";
}

@model List<Reservations>

<div class="calc-flex">

    <div class="calc-item">
        <div class="calc-first-div">
            <div>
                <i class="fa-regular fa-check"></i>
                <p class="">Completed</p>
            </div>
            <div>
                <p id="completedReservation" class="calc-length">0</p>
            </div>
        </div>
        <div>
        </div>
    </div>
    <div class="calc-item">
        <div class="calc-first-div">
            <div>
                <i class="fa-light fa-ban"></i>
                <p class="">Canceled</p>
            </div>
            <div>
                <p id="canceledReservation" class="calc-length">0</p>
            </div>
        </div>
        <div>
        </div>
    </div>
    <div class="calc-item">
        <div class="calc-first-div">
            <div>
                <i class="iconsminds-euro-sign-2"></i>
                <p class="">Total Price</p>
            </div>
            <div>
                <p class="calc-length"><span id="totalPrice">@Math.Round(Model.Where(a=>a.Status != 4).Select(a=>a.TotalPrice).Sum(),2)</span> €</p>
            </div>
        </div>
        <div>
        </div>
    </div>
    <div class="calc-item">
        <div class="calc-first-div">
            <div>
                <i class="iconsminds-euro"></i>
                <p class="">Total Earnings</p>
            </div>
            <div>
                <p class="calc-length"><span>0</span>€</p>
            </div>
        </div>
        <div>
            <a href="#test" class="pull_price">Withdrawal Request</a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="mb-2 mt-5">
            @*<a class="btn pt-0 pl-0 d-inline-block d-md-none" data-toggle="collapse" href="#displayOptions"
            role="button" aria-expanded="true" aria-controls="displayOptions">
            Display Options
            <i class="simple-icon-arrow-down align-middle"></i>
            </a>*@
            <div>
                <div class="row">
                    <div class="col-sm-4 col-12 mb-2">
                        <input class="form-control" placeholder="Search Table" id="searchDatatable">
                    </div>
                    <div class="col-sm-8 col-12 mb-2">
                        <div class="">
                            <div class="">
                                <div class="form-group">
                                    <div class="input-daterange input-group" id="datepicker">
                                        <input type="text" class="input-sm form-control" name="start" id="dateMin" placeholder="Start Date">
                                        <span class="input-group-addon"></span>
                                        <input type="text" class="input-sm form-control" name="end" id="dateMax" placeholder="End Date">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="separator"></div>
    </div>
</div>

<div class="row">
    <div class="col-12 mb-4 data-table-rows data-tables-hide-filter">
        <table id="financialTable" class="data-table responsive nowrap"
               data-order="[[ 1, &quot;desc&quot; ]]">
            <thead>
                <tr>
                    <th>Reservation Code</th>
                    <th>Name</th>
                    <th>Date</th>
                    <th>Situation</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <p class="list-item-heading">@item.ReservationCode</p>
                        </td>
                        <td class="text-muted">
                            @item.Name
                        </td>
                        <td class="text-muted">
                            @item.ReservationDate
                        </td>
                        <td>
                            @if (item.Status == 1)
                            {
                                <span class="badge badge-success">Waiting For Transaction</span>
                            }
                            else if (item.Status == 3)
                            {
                                <span class="badge badge-info">Completed</span>
                            }
                            else if (item.Status == 4)
                            {
                                <span class="badge badge-danger">Cancel Reservation</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="float-left dropdown-as-select" id="pageCountDatatable" style="float: left;
    margin-top: -4.9rem;
    z-index: 99;
    position: relative;">
            <span class="text-muted text-small">Displaying 1-10 of 40 items </span>
            <button class="btn btn-outline-dark btn-xs dropdown-toggle" type="button"
                    data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                10
            </button>
            <div class="dropdown-menu dropdown-menu-right">
                <a class="dropdown-item" href="#">5</a>
                <a class="dropdown-item active" href="#">10</a>
                <a class="dropdown-item" href="#">20</a>
            </div>
        </div>
        <div class="top-right-button-container" style="top: -1.5rem;">
        </div>
    </div>
</div>

@section pageJs{
    <script>
        function CountAnimation(item, count) {
            var i = 0;

            var countInterval = setInterval(function () {

                $(item).text(i)
                if (count <= i) {
                    clearInterval(countInterval)
                }
                i++;
            }, 100)
        }

        window.onload = () => {
            CountAnimation("#canceledReservation", @Model.Where(a=>a.Status == 4).ToList().Count);
            CountAnimation("#completedReservation", @Model.Where(a=>a.Status == 3).ToList().Count);


            tablefirstdata = $dataTableRows.data();

        }

        var tablefirstdata;

        var $dataTableRows = $("#financialTable").DataTable({
            bLengthChange: false,
            destroy: true,
            info: false,
            sDom: '<"row view-filter"<"col-sm-12"<"float-left"l><"float-right"f><"clearfix">>>t<"row view-pager"<"col-sm-12"<"text-center"ip>>>',
            pageLength: 10,
            columns: [
                { data: "ReservationCode" },
                { data: "Name" },
                { data: "Date" },
                { data: "Situation" },
            ],
            columnDefs: [
                { "type": "date-euro", targets: 2 }
            ],
            language: {
                paginate: {
                    previous: "<i class='simple-icon-arrow-left'></i>",
                    next: "<i class='simple-icon-arrow-right'></i>"
                }
            },
            drawCallback: function () {
                unCheckAllRows();
                $("#checkAllDataTables").prop("checked", false);
                $("#checkAllDataTables").prop("indeterminate", false).trigger("change");

                $($(".financialTable_wrapper .pagination li:first-of-type"))
                    .find("a")
                    .addClass("prev");
                $($(".financialTable_wrapper .pagination li:last-of-type"))
                    .find("a")
                    .addClass("next");
                $(".dataTables_wrapper .pagination").addClass("pagination-sm");
                var api = $(this).dataTable().api();
                $("#pageCountDatatable span").html("Displaying " + parseInt(api.page.info().start + 1) + "-" + api.page.info().end + " of " + api.page.info().recordsTotal + " items");
            }
        });

        function resetTable() {
            $dataTableRows.clear()

            $.each(tablefirstdata, function (key, value) {
                $dataTableRows.row.add(value)
            })

            $dataTableRows.draw()
        }


        $("body").on("change", "#dateMax,#dateMin", function () {
            resetTable();

            var startDate = new Date($('#dateMin').val()).getTime()
            var finishDate = new Date($('#dateMax').val()).getTime()


            var rows = $dataTableRows.rows({ search: "applied" }).nodes().toArray();
            for (var i = rows.length - 1; i >= 0; i--) {
                var data = $dataTableRows.row(rows[i]).data();
                if (data != null) {
                    var columnDate = new Date(convertDateFormat2(data.Date)).getTime();

                    console.log(columnDate)
                    console.log(startDate)
                    console.log(finishDate)
                    console.log(new Date(convertDateFormat2(data.Date)))

                    if (!isNaN(startDate) && !isNaN(finishDate)) {
                        if (startDate >= columnDate || finishDate <= columnDate) {
                            $dataTableRows.row(rows[i]).remove();
                        }
                    } else if (!isNaN(startDate)) {
                        if (startDate >= columnDate) {
                            $dataTableRows.row(rows[i]).remove();
                        }
                    } else if (!isNaN(finishDate)) {
                        if (finishDate <= columnDate) {
                            $dataTableRows.row(rows[i]).remove();
                        }
                    }
                }
            }
            $dataTableRows.draw();
        })

        function convertDateFormat(inputDate) {

            var dateParts = inputDate.split('/');
            var day = dateParts[0];
            var month = dateParts[1];
            var year = dateParts[2];
            return String(month + '-' + day + '-' + year);
        }

        function convertDateFormat2(inputDate) {
            console.log(inputDate)
            var dateParts = inputDate.split(' ')[0].split(".");
            var day = dateParts[0];
            var month = dateParts[1];
            var year = dateParts[2];
            return String(month + '-' + day + '-' + year);
        }
        $('#reservationTable tbody').on('click', 'tr', function () {
            $(this).toggleClass('selected');
            var $checkBox = $(this).find(".custom-checkbox input");
            $checkBox.prop("checked", !$checkBox.prop("checked")).trigger("change");
            controlCheckAll();
        });


        function unCheckAllRows() {
            $('#reservationTable tbody tr').removeClass('selected');
            $('#reservationTable tbody tr .custom-checkbox input').prop("checked", false).trigger("change");
        }

        function checkAllRows() {
            $('#reservationTable tbody tr').addClass('selected');
            $('#reservationTable tbody tr .custom-checkbox input').prop("checked", true).trigger("change");
        }

        $("#checkAllDataTables").on("click", function (event) {
            var isCheckedAll = $("#checkAllDataTables").prop("checked");
            if (isCheckedAll) {
                checkAllRows();
            } else {
                unCheckAllRows();
            }
        });

        function getSelectedRows() {
            //Getting Selected Ones
            console.log($dataTableRows.rows('.selected').data());
        }

        $("#searchDatatable").on("keyup", function (event) {
            $dataTableRows.search($(this).val()).draw();
        });

        $("#pageCountDatatable .dropdown-menu a").on("click", function (event) {
            var selText = $(this).text();
            $dataTableRows.page.len(parseInt(selText)).draw();
        });
    </script>
}

